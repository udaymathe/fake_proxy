# -*- coding: utf-8 -*-
"""rotating_proxy.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SjT15VHOzNwO4WhNsINVUbv3c895_RYs
"""

def fake_proxy():
  #installs module for different runtimes
  #!pip install fake-useragent

  #importing
  from fake_useragent import UserAgent
  import random
  import bs4 as bs
  import requests

  #Defining
  ua = UserAgent()
  proxies=[]

  #Gets the list of proxies from www.sslproxies.org
  headers={'User-Agent': ua.random}
  proxies_req = requests.get('https://www.sslproxies.org')
  proxies_req.text
  soup = bs.BeautifulSoup(proxies_req.text,'lxml')
  proxies_table = soup.find(id='proxylisttable')

  #stores list of proxies parsed
  for row in proxies_table.tbody.find_all('tr'):
    proxies.append({
      'ip':   row.find_all('td')[0].string,
      'port': row.find_all('td')[1].string
    })

  def random_proxy():
    return random.randint(0, len(proxies) - 1)

  proxy_index = random_proxy()
  proxy = proxies[proxy_index]

  #find working proxies only and deletes the rest
  #----------------for loop------------------------
  for n in range(1, 100):
    proxies_cust  = {
    "http": 'http://'+ proxy['ip'] + ':' + proxy['port'],
    "https": 'https://'+ proxy['ip'] + ':' + proxy['port']}
    
    if n%10==0:
      proxy_index = random_proxy()
      proxy = proxies[proxy_index]
    try:
      req=requests.get('http://icanhazip.com',proxies=proxies_cust, timeout=2.5)
      my_ip = req.text
      #print('#' + str(n) + ': ' + my_ip)
    except: # If error, delete this proxy and find another one
      try:
        del proxies[proxy_index]
        #print('Proxy ' + proxy['ip'] + ':' + proxy['port'] + ' deleted.')
      except:
        None
  #----------------end of for------------------------
  fake_proxies  = []
  for i in proxies:
    temp_fake_proxy = {
      "http": 'http://'+ i['ip'] + ':' + i['port'],
      "https": 'https://'+ i['ip'] + ':' + i['port']}
    fake_proxies.append(temp_fake_proxy)
  return(fake_proxies)

if __name__ == '__main__':
  fake_proxy()